package com.study.java.common;
/**
  什么是面向对象？
  1.说起面向对象就要提到面向过程 面向过程就是要完成一件事 所做的每一步的步骤
    面向对象就是把这些步骤封装起来，通过创建对象调用这些步骤方法去完成这件事情
  2.面向对象两大要素 ：类和对象  类-->人（宽泛）  对象-->马云 乔布斯 马化腾.....（具体）
  3.人是由五脏六出组成的 类是由属性和方法组成的  属性（类中的成员变量（修饰符？是否赋值？）） 方法就是方法
  4.调用:对象.属性 / 对象.方法
  5.说明：如果创建了一个类的多个对象，对于类中定义的属性，每个对象都拥有各自的一套副本，且互不干扰。
  6.方法中的变量都是局部变量  ps：变量分为3类：局部变量 成员变量 全局变量 https://blog.csdn.net/hxnlyw/article/details/94550158
      -->全局变量(全局静态变量)：作用整个类中，直接被类调用；放在方法区中；
  7.成员变量（属性）区别于局部变量，成员变量是存在于堆中的（非static）。局部变量存在于栈。局部变量不可以用权限修饰符。
   （局部：方法内，形参，代码块）（成员：方法外）
  8.关于Student的数组的内存解析可以再看一遍（对象数组的内存解析P200）
  9.匿名对象 mall.show(new Phone());  匿名对象只能调用一次
  10.在同一个类中，允许存在一个以上的同名方法，只要它们的参数个数或者参数类型不同即可
  11.可变参数---> 参数的个数可以变化(0到多个)-->(String ... 参数名)-->在和其他类型参数公存时必须声明在末尾-->可变参数只能存在一个
  12.= 对于基本类型是赋值 对于引用类型是赋给地址 指向同一份地址   （基本类型存的是值，引用类型存的是地址）
  13.如果参数是基本数据类型，此时实参赋给形参的是实参真实存储的值。两份值互不干扰，不共享。方法执行完就出栈了 没啥影响
  14.如果参数是引用数据类型，此时实参赋给形参的是实参真实存储的地址值。两份值共享。p211
  15.方法的重载和权限修饰符、返回值类型、形参变量名、方法体都没关系
  16.引用数据类型一般都是new出来 除了String 。 例如:String str="Hello"。另外String 在值传递的时候也很特殊。P218

 */
public class StudyOOP_1 {


    public static void main(String[] args) {
        Student stu=new Student();
        stu.age=18;
        stu.say();
    }

    static class Student{
        int age;
        String name;
        boolean sex;  //男 false 女 true
        int score;

        public void say(){
            // 成员变量作用于整个类中
            System.out.println("学生信息:name："+name+",age:"+age);
        }

    }

}
